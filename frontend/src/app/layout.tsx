"use client";
import "./globals.css";
// import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { useRouter, usePathname } from "next/navigation";
import {
  QueryClient,
  QueryClientProvider,
  useQuery,
} from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { useEffect } from "react";
import { DndProvider } from "react-dnd";
import { HTML5Backend } from "react-dnd-html5-backend";
import { RecoilRoot } from "recoil";
import { refreshToken } from "../utils/refreshToken";

const inter = Inter({ subsets: ["latin"] });

// I HAD TO COMMENT THIS OUT TO USE useEffect for "getProfile()"

// export const metadata: Metadata = {
//   title: "Salumi Tracker",
//   description: "Generated by create next app",
// };

const queryClient = new QueryClient();

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const router = useRouter();
  // const pathname = usePathname();

  // useEffect(() => {
  //   if (
  //     !document.cookie.includes("logged_in=true") &&
  //     pathname !== "/login" &&
  //     pathname !== "/register"
  //   ) {
  //     router.push("/login");
  //   }
  // }, []);

  // const checkAuth = () => {
  //   try {
  //     if (
  //       !document.cookie.includes("logged_in=true") &&
  //       pathname !== "/register" &&
  //       pathname !== "/login"
  //     ) {
  //       console.log(pathname !== "/register");
  //       router.push("/logout");
  //     }
  //   } catch (e) {
  //     console.log("Error checking authentication status:", e);
  //   }
  // };

  // useEffect(() => {
  //   checkAuth();
  //   const interval = setInterval(checkAuth, 6000);
  //   return () => {
  //     clearInterval(interval);
  //   };
  // }, []);

  useEffect(() => {
    const setupTokenRefresh = () => {
      const accessTokenExpiry = 10 * 60 * 1000; // 10 minutes
      const interval = setInterval(async () => {
        const newAccessToken = await refreshToken();
        if (newAccessToken) {
          console.log("Access token refreshed:", newAccessToken);
        } else {
          console.log("Failed to refresh the access token!");
          router.push("/login");
        }
      }, accessTokenExpiry);

      return () => clearInterval(interval);
    };

    setupTokenRefresh();
  }, []);

  return (
    <html lang="en">
      <head>
        {/* <link
          href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.css"
          rel="stylesheet"
        /> */}
      </head>
      <body className={inter.className}>
        <RecoilRoot>
          <DndProvider backend={HTML5Backend}>
            <QueryClientProvider client={queryClient}>
              {children}
              <ReactQueryDevtools />
            </QueryClientProvider>
          </DndProvider>
        </RecoilRoot>
        {/* <script src="../path/to/flowbite/dist/flowbite.min.js"></script> */}
      </body>
    </html>
  );
}
